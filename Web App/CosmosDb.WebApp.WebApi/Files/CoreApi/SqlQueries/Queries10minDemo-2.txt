------------------------
-- mystore Collection --
------------------------

-- Get all documents
SELECT * FROM c

-- Get all names and IDs
SELECT c.id, c.name
FROM c

-- Get all names
SELECT c.name
FROM c

-- Get all names as a flat string array
SELECT VALUE c.name
FROM c

-- String concatenation
SELECT VALUE c.name || ', ' || c.address.countryRegionName
FROM c

-- Range queries
SELECT VALUE c.name
FROM c
WHERE
 c.name >= 'A' AND
 c.name <= 'K'

SELECT VALUE c.name
FROM c
WHERE
 c.name BETWEEN 'A' AND 'K'

SELECT VALUE c.name
FROM c
WHERE
 c.name BETWEEN 'L' AND 'Z'

-- Sort using ORDER BY
SELECT c.id, c.name
FROM c
ORDER BY c.name

SELECT c.id, c.name
FROM c
ORDER BY c.name DESC

-- Flatten results
SELECT
 c.id,
 c.name,
 c.address.location.city,
 c.address.countryRegionName
FROM c

-- Boolean expression property (on = comparison)
SELECT
 c.id,
 c.name,
 c.address.location.city,
 c.address.location.stateProvinceName,
 c.address.location.city = c.address.location.stateProvinceName AS isSameCityState
FROM c

-- Ternary (?) operator

SELECT
 c.name,
 c.address.countryRegionName AS region,
 (c.address.countryRegionName = "United States" ? "USD" : "CAD" ) AS currency
FROM c
WHERE
 c.address.countryRegionName IN ("United States", "Canada")

-- Nested ternary (?) operator

SELECT
 c.name,
 c.address.countryRegionName AS region,
 (c.address.countryRegionName = "United States" ? "USD" :
  (c.address.countryRegionName = "Canada" ? "CAD" :
   "EUR")) AS currency
FROM c
WHERE
 c.address.countryRegionName IN ("United States", "Canada", "France")

-- Aggregate functions

-- Count for zip code
SELECT COUNT(c) AS Zip14111
FROM c
WHERE
 c.address.postalCode = '14111'

-- Can't count across partitions without VALUE
SELECT COUNT(c) AS USCount
FROM c
WHERE
 c.address.countryRegionName = 'United States'

-- Use VALUE for cross partition aggregates
SELECT VALUE COUNT(c)
FROM c
WHERE
 c.address.countryRegionName = 'United States'
